TestingTorNetwork 1

## Rapid Bootstrap Testing Options ##
# These typically launch a working minimal Tor network in ~20s
# These parameters make tor networks bootstrap fast,
# but can cause consensus instability and network unreliability
# (Some are also bad for security.)
#
# We need at least 3 descriptors to build circuits.
# In a 3 relay network, 0.67 > 2/3, so we try hard to get 3 descriptors.
# In larger networks, 0.67 > 2/N, so we try hard to get >=3 descriptors.
PathsNeededToBuildCircuits 0.67
TestingDirAuthVoteExit *
TestingDirAuthVoteHSDir *
V3AuthNIntervalsValid 2

## Always On Testing Options ##
# We enable TestingDirAuthVoteGuard to avoid Guard stability requirements
TestingDirAuthVoteGuard *
# We set TestingMinExitFlagThreshold to 0 to avoid Exit bandwidth requirements
TestingMinExitFlagThreshold 0
# VoteOnHidServDirectoriesV2 needs to be set for HSDirs to get the HSDir flag
#Default VoteOnHidServDirectoriesV2 1

## Options that we always want to test ##
DataDirectory /torDir
# RunAsDaemon 1
ConnLimit 60
Nickname test003r
# Let tor close connections gracefully before exiting
ShutdownWaitLength 2
DisableDebuggerAttachment 0

#ControlPort 8003
# Use ControlSocket rather than ControlPort unix: to support older tors
#ControlSocket /home/naman/torRelay/003r/control
#CookieAuthentication 1
#PidFile /home/naman/torRelay/003r/pid

# Log notice file /home/naman/chutney/net/nodes.1709807179/003r/notice.log
# Log info file /home/naman/chutney/net/nodes.1709807179/003r/info.log
# Turn this off to save space
#Log debug file /home/naman/torRelay/003r/debug.log
ProtocolWarnings 1
SafeLogging 0
LogTimeGranularity 1

# Options that we can disable at runtime, based on env vars

# Use tor's sandbox. Defaults to 1 on Linux, and 0 on other platforms.
# Use CHUTNEY_TOR_SANDBOX=0 to disable, if tor's sandbox doesn't work with
# your glibc.
# Sandbox 1

# Ask all child tor processes to exit when chutney's test-network.sh exits
# (if the CHUTNEY_*_TIME options leave the network running, this option is
# disabled)
#__OwningControllerProcess 0

DirAuthority test000a orport=5000 no-v2 v3ident=387760FC480CF6AA92D5F341E013FB208EC8FD19 192.168.0.2:7000 BC1A08575F04F04F1372FF7B40154AC99BC9052E
DirAuthority test001a orport=5001 no-v2 v3ident=812A1F8C5C2719EA2FA4D547B4E15A985A9B6B00 192.168.0.3:7001 A7EEFCAFDEE3ADE163BE0F0D136A95C42C486FCD
DirAuthority test002a orport=5002 no-v2 v3ident=BD88184E3FB42563A32A5127D215B343AEC6D759 192.168.0.4:7002 BE32764C49B25FB9649DF54B08117BA7E12C5428


SocksPort 0
OrPort 5003
Address 192.168.0.5

# Must be included before exit-v{4,6}.i
#ExitRelay 0

# These options are set here so they apply to IPv4 and IPv6 Exits
#
# Tell Exits to avoid using DNS: otherwise, chutney will fail if DNS fails
# (Chutney only accesses 127.0.0.1 and ::1, so it doesn't need DNS)
ServerDNSDetectHijacking 0
ServerDNSTestAddresses
# If this option is /dev/null, or any other empty or unreadable file, tor exits
# will not use DNS. Otherwise, DNS is enabled with this config.
# (If the following line is commented out, tor uses /etc/resolv.conf.)
# ServerDNSResolvConfFile /run/systemd/resolve/stub-resolv.conf
ServerDNSResolvConfFile /dev/null

DirPort 7003


# This file is named "relay.tmpl" for compatibility with previous
# chutney versions

# An exit relay that can exit to IPv4 localhost
# (newer versions of tor need this to be explicitly configured)

# Must be included after relay-non-exit.tmpl
ExitRelay 1

# 1. Allow exiting to IPv4 localhost and private networks by default
# -------------------------------------------------------------

# Each IPv4 tor instance is configured with Address 127.0.0.1 by default
ExitPolicy accept 127.0.0.0/8:*

# If you only want tor to connect to localhost, disable these lines:
# This may cause network failures in some circumstances
ExitPolicyRejectPrivate 0
ExitPolicy accept private:*

# 2. Optionally: Allow exiting to the entire IPv4 internet on HTTP(S)
# -------------------------------------------------------------------

# 2. or 3. are required to work around #11264 with microdescriptors enabled
# "The core of this issue appears to be that the Exit flag code is
#  optimistic (just needs a /8 and 2 ports), but the microdescriptor
#  exit policy summary code is pessimistic (needs the entire internet)."
# An alternative is to disable microdescriptors and use regular
# descriptors, as they do not suffer from this issue.
#ExitPolicy accept *:80
#ExitPolicy accept *:443

# 3. Optionally: Accept all IPv4 addresses, that is, the public internet
# ----------------------------------------------------------------------
ExitPolicy accept *:*

# 4. Finally, reject all IPv4 addresses which haven't been permitted
# ------------------------------------------------------------------
ExitPolicy reject *:*

